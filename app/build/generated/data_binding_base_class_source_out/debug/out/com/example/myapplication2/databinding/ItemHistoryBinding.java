// Generated by view binder compiler. Do not edit!
package com.example.myapplication2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHistoryBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView textViewDate;

  @NonNull
  public final TextView textViewKelas;

  @NonNull
  public final TextView textViewNama;

  @NonNull
  public final TextView textViewNis;

  @NonNull
  public final TextView textViewNoUrut;

  @NonNull
  public final TextView textViewScore;

  private ItemHistoryBinding(@NonNull CardView rootView, @NonNull TextView textViewDate,
      @NonNull TextView textViewKelas, @NonNull TextView textViewNama,
      @NonNull TextView textViewNis, @NonNull TextView textViewNoUrut,
      @NonNull TextView textViewScore) {
    this.rootView = rootView;
    this.textViewDate = textViewDate;
    this.textViewKelas = textViewKelas;
    this.textViewNama = textViewNama;
    this.textViewNis = textViewNis;
    this.textViewNoUrut = textViewNoUrut;
    this.textViewScore = textViewScore;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.textViewDate;
      TextView textViewDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewDate == null) {
        break missingId;
      }

      id = R.id.textViewKelas;
      TextView textViewKelas = ViewBindings.findChildViewById(rootView, id);
      if (textViewKelas == null) {
        break missingId;
      }

      id = R.id.textViewNama;
      TextView textViewNama = ViewBindings.findChildViewById(rootView, id);
      if (textViewNama == null) {
        break missingId;
      }

      id = R.id.textViewNis;
      TextView textViewNis = ViewBindings.findChildViewById(rootView, id);
      if (textViewNis == null) {
        break missingId;
      }

      id = R.id.textViewNoUrut;
      TextView textViewNoUrut = ViewBindings.findChildViewById(rootView, id);
      if (textViewNoUrut == null) {
        break missingId;
      }

      id = R.id.textViewScore;
      TextView textViewScore = ViewBindings.findChildViewById(rootView, id);
      if (textViewScore == null) {
        break missingId;
      }

      return new ItemHistoryBinding((CardView) rootView, textViewDate, textViewKelas, textViewNama,
          textViewNis, textViewNoUrut, textViewScore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
